fe_reduce_infamy = {
	groups= {
		general
	}
	requires_approval = no
	should_notify_third_parties = yes
	show_effect_in_tooltip = yes
	
	# texture = "gfx/interface/icons/diplomatic_action_icons/knowledge_sharing.dds"
	confirmation_sound = "event:/SFX/UI/MapInteraction/SubjectInteractions/diplomatic_action_subjects_10_knowledge_sharing_benign"

	unlocking_technologies = {
		fallen_empire_ancient_electronic_system_maintenance
	}
	
	selectable = {
		NOT = { is_country_type = decentralized }
		is_revolutionary = no
	}
	
	potential = {
		scope:target_country = {
			NOT = { is_country_type = decentralized }
		}
	}

	possible = {	
		scope:target_country = {
			NOT = { is_diplomatic_play_enemy_of = root }
		}
	}
	
	pact = {	
		cost = 100
		is_two_sided_pact = no
		show_in_outliner = yes
		recipient_pays_maintenance = no
		forced_duration = 12
		
		relations_progress_per_day = 3 # At 100, +1 relations
		relations_improvement_max = 50

		income_transfer = 0.20
		second_country_gets_income_transfer = yes
		income_transfer_based_on_second_country = yes

		first_modifier = {
			country_tech_spread_mult = -0.10
		}
		
		second_modifier = {
			country_tech_spread_mult = 0.25
			country_pact_leverage_generation_add = 200
		}

		weekly_effect = {
			change_infamy = -0.1
		}
		
		actor_can_break = {
			always = yes
		}

		requirement_to_maintain = {
			trigger = {
				has_diplomatic_relevance = scope:target_country
			}
		}

	 	requirement_to_maintain = {
			trigger = {
				custom_tooltip = {
					text = DIPLO_ACTION_RELATIONS_POOR_OR_LESS_NOT
					scope:target_country.relations:root > relations_threshold:poor
				}		
			}
			
			show_about_to_break_warning = {
				scope:target_country.relations:root <= -17 # this is: poor + 3
				scope:target_country.relations_change_rate:root < 0
			}					
		}	

		requirement_to_maintain = {
			trigger = {
				custom_tooltip = {
					text = "DIPLOMATIC_PACT_REQUIREMENT_NOT_DECENTRALIZED"
					NOT = { is_country_type = decentralized }
					scope:target_country = {
						NOT = { is_country_type = decentralized }
					}				
				}
			}
		}
			
		requirement_to_maintain = {
			trigger = {
				custom_tooltip = {
					text = "DIPLOMATIC_PACT_REQUIREMENT_AT_PEACE"
					NOT = { has_war_with = scope:target_country }
				}			
			}
		}		

		requirement_to_maintain = {
			trigger = {
				country_rank >= scope:target_country.country_rank
			}
		}
		
		requirement_to_maintain = {
			trigger = {		
				custom_tooltip = {
					text = "DIPLOMATIC_PACT_REQUIREMENT_MORE_TECHS_RESEARCHED"
					techs_researched > scope:target_country.techs_researched
				}	
			}
		}
	}
	
	ai = {
		max_influence_spending_fraction = 0.2
		
		evaluation_chance = {
			value = 0.0
			
			if = {
				limit = { country_rank >= rank_value:major_power }
				add = {
					value = country_rank
					multiply = 0.05
				}				
			}
		}		
		
		propose_score = {
			value = 1 # Low propose score, AI should replace this with other pacts if needed
			
			add = {
				value = scope:target_country.country_rank
				multiply = 1
			}
		}

		will_propose = {
			modifier:country_tech_spread_mult > -0.25 # don't compromise tech spread more than -25%
			has_attitude = {
				who = scope:target_country
				attitude = protective
			}	
			NOT = { is_country_type = unrecognized }
			OR = {
				scope:target_country = { liberty_desire >= 25 }
				NOT = {
					any_subject_or_below = {
						root = {
							has_diplomatic_pact = {
								type = da_knowledge_sharing
								who = prev
							}
						}
					}
				}
			}						
		}
		
		will_break = {
			OR = {
				has_attitude = {
					who = scope:target_country
					attitude = domineering
				}	
				is_country_type = unrecognized
				modifier:country_tech_spread_mult <= -0.5
			}
		}
		
		accept_score = {
			value = 0
			
			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_BASE"
				value = -100
			}

			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_TECH_SPREAD_VALUE"
				value = modifier:country_tech_spread_mult
				add = 0.25
				multiply = 200
			}

			if = {
				limit = {
					"scope:actor.ai_ideological_opinion(root)" > 0
				}
				add = {
					desc = "DIPLOMATIC_ACCEPTANCE_IDEOLOGICAL_OPINION"
					value = "scope:actor.ai_ideological_opinion(root)"
					multiply = 0.5
					max = 25
				}
			}
			else_if = {
				limit = {
					"scope:actor.ai_ideological_opinion(root)" < 0
				}
				add = {
					desc = "DIPLOMATIC_ACCEPTANCE_IDEOLOGICAL_OPINION_NEGATIVE"
					value = "scope:actor.ai_ideological_opinion(root)"
					multiply = 0.5
					min = -25
				}
			}						
							
			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_ATTITUDE"
				if = {
					limit = {
						has_attitude = {
							who = scope:actor
							attitude = protective
						}	
					}
					value = 50
				}				
				else_if = {
					limit = {
						has_attitude = {
							who = scope:actor
							attitude = domineering
						}	
					}
					value = -50
				}							
			}
			
			if = {
				limit = {
					scope:actor = { is_subject_of = root }
				}
				add = {
					desc = "DIPLOMATIC_ACCEPTANCE_ACTOR_LIBERTY_DESIRE"
					value = "scope:actor.liberty_desire"
					subtract = 50
				}
			}
			
			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_RELATIONS"		
				if = {
					limit = {
						"relations(scope:actor)" >= relations_threshold:friendly
					}
					value = 100
				}	
				else_if = {
					limit = {
						"relations(scope:actor)" >= relations_threshold:amicable
					}
					value = 50
				}					
				else_if = {
					limit = {
						"relations(scope:actor)" >=  relations_threshold:cordial
					}
					value = 25
				}
				else_if = {
					limit = {
						"relations(scope:actor)" > relations_threshold:poor
					}
					value = -50
				}					
				else = {
					value = -75
				}				
			}
			
			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_INFAMY"
				if = {
					limit = {
						"scope:actor.infamy" >= infamy_threshold:infamous
						"scope:actor.infamy" < infamy_threshold:notorious
					}
					value = -5
				}	
				if = {
					limit = {
						"scope:actor.infamy" >= infamy_threshold:notorious
						"scope:actor.infamy" < infamy_threshold:pariah
					}
					value = -10
				}
				if = {
					limit = {
						"scope:actor.infamy" >= infamy_threshold:pariah
					}
					value = -25
				}					
			}
		}
	}
}

fe_reduce_infamy_principle = {
	groups= {
		general
	}
	requires_approval = no
	should_notify_third_parties = yes
	show_effect_in_tooltip = yes
	
	# texture = "gfx/interface/icons/diplomatic_action_icons/knowledge_sharing.dds"
	confirmation_sound = "event:/SFX/UI/MapInteraction/SubjectInteractions/diplomatic_action_subjects_10_knowledge_sharing_benign"

	unlocking_principles = {
		principle_fallen_empire_3
	}

	unlocking_technologies = {
		fallen_empire_ancient_electronic_system_maintenance
	}
	
	selectable = {
		NOT = { is_country_type = decentralized }
		is_revolutionary = no
	}
	
	potential = {
		scope:target_country = {
			NOT = { is_country_type = decentralized }
		}
	}

	possible = {	
		scope:target_country = {
			NOT = { is_diplomatic_play_enemy_of = root }
		}
	}
	
	pact = {	
		cost = 50
		is_two_sided_pact = no
		show_in_outliner = yes
		recipient_pays_maintenance = no
		forced_duration = 12
		
		relations_progress_per_day = 3 # At 100, +1 relations
		relations_improvement_max = 50

		income_transfer = 0.20
		second_country_gets_income_transfer = yes
		income_transfer_based_on_second_country = yes

		first_modifier = {
			country_tech_spread_mult = -0.10
		}
		
		second_modifier = {
			country_tech_spread_mult = 0.25
			country_pact_leverage_generation_add = 200

			state_welfare_payments_add = 0.5
		}

		weekly_effect = {
			change_infamy = -0.2
		}
		
		actor_can_break = {
			always = yes
		}

		requirement_to_maintain = {
			trigger = {
				has_diplomatic_relevance = scope:target_country
			}
		}

	 	requirement_to_maintain = {
			trigger = {
				custom_tooltip = {
					text = DIPLO_ACTION_RELATIONS_POOR_OR_LESS_NOT
					scope:target_country.relations:root > relations_threshold:poor
				}
			}
			
			show_about_to_break_warning = {
				scope:target_country.relations:root <= -17 # this is: poor + 3
				scope:target_country.relations_change_rate:root < 0
			}					
		}	

		requirement_to_maintain = {
			trigger = {
				custom_tooltip = {
					text = "DIPLOMATIC_PACT_REQUIREMENT_NOT_DECENTRALIZED"
					NOT = { is_country_type = decentralized }
					scope:target_country = {
						NOT = { is_country_type = decentralized }
					}				
				}
			}
		}
			
		requirement_to_maintain = {
			trigger = {
				custom_tooltip = {
					text = "DIPLOMATIC_PACT_REQUIREMENT_AT_PEACE"
					NOT = { has_war_with = scope:target_country }
				}			
			}
		}		

		requirement_to_maintain = {
			trigger = {
				country_rank >= scope:target_country.country_rank
			}
		}
		
		requirement_to_maintain = {
			trigger = {		
				custom_tooltip = {
					text = "DIPLOMATIC_PACT_REQUIREMENT_MORE_TECHS_RESEARCHED"
					techs_researched > scope:target_country.techs_researched
				}	
			}
		}
	}
	
	ai = {
		max_influence_spending_fraction = 0.2
		
		evaluation_chance = {
			value = 0.0
			
			if = {
				limit = { country_rank >= rank_value:major_power }
				add = {
					value = country_rank
					multiply = 0.05
				}				
			}
		}		
		
		propose_score = {
			value = 1 # Low propose score, AI should replace this with other pacts if needed
			
			add = {
				value = scope:target_country.country_rank
				multiply = 1
			}
		}

		will_propose = {
			modifier:country_tech_spread_mult > -0.25 # don't compromise tech spread more than -25%
			has_attitude = {
				who = scope:target_country
				attitude = protective
			}	
			NOT = { is_country_type = unrecognized }
			OR = {
				scope:target_country = { liberty_desire >= 25 }
				NOT = {
					any_subject_or_below = {
						root = {
							has_diplomatic_pact = {
								type = da_knowledge_sharing
								who = prev
							}
						}
					}
				}
			}						
		}
		
		will_break = {
			OR = {
				has_attitude = {
					who = scope:target_country
					attitude = domineering
				}	
				is_country_type = unrecognized
				modifier:country_tech_spread_mult <= -0.5
			}
		}
		
		accept_score = {
			value = 0
			
			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_BASE"
				value = -100
			}

			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_TECH_SPREAD_VALUE"
				value = modifier:country_tech_spread_mult
				add = 0.25
				multiply = 200
			}

			if = {
				limit = {
					"scope:actor.ai_ideological_opinion(root)" > 0
				}
				add = {
					desc = "DIPLOMATIC_ACCEPTANCE_IDEOLOGICAL_OPINION"
					value = "scope:actor.ai_ideological_opinion(root)"
					multiply = 0.5
					max = 25
				}
			}
			else_if = {
				limit = {
					"scope:actor.ai_ideological_opinion(root)" < 0
				}
				add = {
					desc = "DIPLOMATIC_ACCEPTANCE_IDEOLOGICAL_OPINION_NEGATIVE"
					value = "scope:actor.ai_ideological_opinion(root)"
					multiply = 0.5
					min = -25
				}
			}						
							
			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_ATTITUDE"
				if = {
					limit = {
						has_attitude = {
							who = scope:actor
							attitude = protective
						}	
					}
					value = 50
				}				
				else_if = {
					limit = {
						has_attitude = {
							who = scope:actor
							attitude = domineering
						}	
					}
					value = -50
				}							
			}
			
			if = {
				limit = {
					scope:actor = { is_subject_of = root }
				}
				add = {
					desc = "DIPLOMATIC_ACCEPTANCE_ACTOR_LIBERTY_DESIRE"
					value = "scope:actor.liberty_desire"
					subtract = 50
				}
			}
			
			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_RELATIONS"		
				if = {
					limit = {
						"relations(scope:actor)" >= relations_threshold:friendly
					}
					value = 100
				}	
				else_if = {
					limit = {
						"relations(scope:actor)" >= relations_threshold:amicable
					}
					value = 50
				}					
				else_if = {
					limit = {
						"relations(scope:actor)" >=  relations_threshold:cordial
					}
					value = 25
				}
				else_if = {
					limit = {
						"relations(scope:actor)" > relations_threshold:poor
					}
					value = -50
				}					
				else = {
					value = -75
				}				
			}
			
			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_INFAMY"
				if = {
					limit = {
						"scope:actor.infamy" >= infamy_threshold:infamous
						"scope:actor.infamy" < infamy_threshold:notorious
					}
					value = -5
				}	
				if = {
					limit = {
						"scope:actor.infamy" >= infamy_threshold:notorious
						"scope:actor.infamy" < infamy_threshold:pariah
					}
					value = -10
				}
				if = {
					limit = {
						"scope:actor.infamy" >= infamy_threshold:pariah
					}
					value = -25
				}					
			}
		}
	}
}
